apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: virtual-controlplane
    component: kube-controller-manager
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app: virtual-controlplane
      component: kube-controller-manager
  template:
    metadata:
    {{- if .Values.controllerManager.podAnnotations }}
      annotations: {{ toYaml .Values.controllerManager.podAnnotations | nindent 8 }}
    {{- end }}
      labels:
        app: virtual-controlplane
        component: kube-controller-manager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - virtual-controlplane
                - key: component
                  operator: In
                  values:
                  - kube-controller-manager
      tolerations:
      - effect: NoExecute
        operator: Exists
      containers:
      - name: kube-controller-manager
        image: {{ .Values.controllerManager.image.repository }}:{{ .Values.controllerManager.image.tag}}
        imagePullPolicy: {{ .Values.controllerManager.image.pullPolicy }}
        command:
        - /usr/local/bin/kube-controller-manager
        - --cluster-name=kubernetes
        - --bind-address=0.0.0.0
        - --cluster-signing-cert-file=/srv/kubernetes/ca/ca.crt
        - --cluster-signing-key-file=/srv/kubernetes/ca/tls.key
        - --controllers=*,bootstrapsigner,tokencleaner
        - --authorization-kubeconfig=/srv/kubernetes/controller-manager/kubeconfig
        - --authentication-kubeconfig=/srv/kubernetes/controller-manager/kubeconfig
        - --kubeconfig=/srv/kubernetes/controller-manager/kubeconfig
        - --root-ca-file=/srv/kubernetes/ca/ca.crt
        - --leader-elect=true
        - --service-account-private-key-file=/srv/kubernetes/service-account-key/tls.key
        - --use-service-account-credentials=true
        - --v=2
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: 10257
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        resources:
          {{- toYaml .Values.controllerManager.resources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: ca-kube-apiserver
          mountPath: /srv/kubernetes/ca
        - name: kube-controller-manager-kubeconfig
          mountPath: /srv/kubernetes/controller-manager/
        - name: service-account-key
          mountPath: /srv/kubernetes/service-account-key
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: ca-kube-apiserver
        secret:
          secretName: {{ .Values.apiServer.tls.ca.secretName }}
      - name: kube-controller-manager-kubeconfig
        secret:
          secretName: {{ .Values.controllerManager.kubeconfigSecretName }}
      - name: service-account-key
        secret:
          secretName: kube-apiserver-sa
