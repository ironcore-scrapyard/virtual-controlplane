apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    app: virtual-controlplane
    component: kube-apiserver
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.apiServer.replicas }}
  selector:
    matchLabels:
      app: virtual-controlplane
      component: kube-apiserver
  template:
    metadata:
    {{- if .Values.apiServer.podAnnotations }}
      annotations: {{ toYaml .Values.apiServer.podAnnotations | nindent 8 }}
    {{- end }}
      labels:
        app: virtual-controlplane
        component: kube-apiserver
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - virtual-controlplane
                - key: component
                  operator: In
                  values:
                  - kube-apiserver
      tolerations:
      - effect: NoExecute
        operator: Exists
      containers:
      - name: kube-apiserver
        image: {{ .Values.apiServer.image.repository }}:{{ .Values.apiServer.image.tag}}
        imagePullPolicy: {{ .Values.apiServer.image.pullPolicy }}
        command:
        - /usr/local/bin/kube-apiserver
        - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
        - --allow-privileged=false
        - --anonymous-auth=false
        - --authorization-mode=Node,RBAC
        - --token-auth-file=/srv/kubernetes/token/static_tokens.csv
        - --client-ca-file=/srv/kubernetes/ca/ca.crt
        - --enable-bootstrap-token-auth=true
        {{- if .Values.apiServer.etcd.secretNames }}
        - --etcd-cafile=/srv/kubernetes/etcd/ca/ca.crt
        - --etcd-certfile=/srv/kubernetes/etcd/client/tls.crt
        - --etcd-keyfile=/srv/kubernetes/etcd/client/tls.key
        {{- end }}
        - --etcd-servers={{ .Values.apiServer.etcd.main.endpoints }}
        {{ if .Values.apiServer.etcd.events }}
        - --etcd-servers={{ .Values.apiServer.etcd.events.endpoints }}
        {{ end }}
        - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP
        {{ if .Values.apiServer.oidcIssuerURL }}
        - --oidc-issuer-url={{ .Values.apiServer.oidcIssuerURL }}
        - --oidc-client-id=kube-kubectl
        - --oidc-username-claim=email
        - --oidc-groups-claim=groups
        {{- if .Values.tls.identity.ca }}
        - --oidc-ca-file=/srv/kubernetes/identity-ca/ca.crt
        {{- end }}
        {{- end }}
        - --event-ttl=1h
        - --profiling=false
        - --secure-port=443
        - --bind-address=0.0.0.0
        - --service-cluster-ip-range=100.64.0.0/24
        - --service-account-issuer={{ .Values.apiServer.serviceURL }}
        - --service-account-key-file=/srv/kubernetes/service-account-key/tls.key
        - --service-account-signing-key-file=srv/kubernetes/service-account-key/tls.key
        - --tls-cert-file=/srv/kubernetes/apiserver/tls.crt
        - --tls-private-key-file=/srv/kubernetes/apiserver/tls.key
        - --v=2
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /livez
            port: 443
            httpHeaders:
            - name: Authorization
              value: Bearer {{ .Values.apiServer.tls.staticToken }}
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /readyz
            port: 443
            httpHeaders:
            - name: Authorization
              value: Bearer {{ .Values.apiServer.tls.staticToken }}
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        ports:
        - name: https
          containerPort: 443
          protocol: TCP
        resources:
          {{- toYaml .Values.apiServer.resources | nindent 10 }}
        volumeMounts:
        - name: ca-kube-apiserver
          mountPath: /srv/kubernetes/ca
        {{- if .Values.apiServer.etcd.secretNames }}
        - name: ca-etcd
          mountPath: /srv/kubernetes/etcd/ca
        - name: etcd-client-tls
          mountPath: /srv/kubernetes/etcd/client
        {{- end }}
        - name: kube-apiserver
          mountPath: /srv/kubernetes/apiserver
        - name: service-account-key
          mountPath: /srv/kubernetes/service-account-key
        {{- if .Values.apiServer.identity }}
        - name: {{ .Values.apiServer.identity.ca }}
          mountPath: /srv/kubernetes/identity-ca
        {{- end }}
        - name: static-token
          mountPath: /srv/kubernetes/token
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: ca-kube-apiserver
        secret:
          secretName: {{ .Values.apiServer.tls.ca.secretName }}
      {{- if .Values.apiServer.identity }}
      - name: ca-identity
        secret:
          secretName: identity-ca
      {{- end }}
      {{- if .Values.apiServer.etcd.secretNames }}
      - name: ca-etcd
        secret:
          secretName: {{ .Values.apiServer.etcd.secretNames.ca }}
      - name: etcd-client-tls
        secret:
          secretName: {{ .Values.apiServer.etcd.secretNames.client }}
      {{- end }}
      - name: kube-apiserver
        secret:
          secretName: {{ .Values.apiServer.tls.secretName }}
      - name: service-account-key
        secret:
          secretName: kube-apiserver-sa
      - name: static-token
        secret:
          secretName: kube-apiserver-static-token
